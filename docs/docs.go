// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/about": {
            "get": {
                "description": "this api is to get about",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "About"
                ],
                "summary": "Get about",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Country"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/about/": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create new about",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "About"
                ],
                "summary": "Create new about",
                "parameters": [
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.About"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/about/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to get about",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "About"
                ],
                "summary": "Get about",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.About"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update about",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "About"
                ],
                "summary": "Update about",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.About"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to delete about",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "About"
                ],
                "summary": "Delete about",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/admin": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for Get admins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get admins",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Admins"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "post": {
                "description": "this api is for create admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create admin",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AdminsCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/admin/activate/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for activating admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Activate admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "admin id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/admin/auth": {
            "post": {
                "description": "this api is for auth admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "auth admin",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AdminAuth"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/admin/deactivate/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for deactivating admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Deactivate admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "admin id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/admin/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for Get me",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Admins"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for Update admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update admin",
                "parameters": [
                    {
                        "type": "string",
                        "name": "password",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/admin/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for Get admin by id from superuser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get admin  by id from superuser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "admin id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Admins"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for Update admin for superuser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update admin for superuser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "admin  id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "isSuperuser",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "password",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for DELETE admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "admin id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/analog": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is get analogs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analogs"
                ],
                "summary": "Get analogs",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Analog"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create analog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analogs"
                ],
                "summary": "Create analog",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnalogRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Analog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/analog/products/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is  Add analog products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analogs"
                ],
                "summary": "Add analog products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Products"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is  Add analog products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analogs"
                ],
                "summary": "Add analog products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "news id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "description": "new products add",
                        "name": "products",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is  Add analog products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analogs"
                ],
                "summary": "Add analog products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "news id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "description": "new products add",
                        "name": "products",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/analog/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is get to analogs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analogs"
                ],
                "summary": "Get analog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "analog id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.AnalogResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update Analog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analogs"
                ],
                "summary": "Update Analog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Analog id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Analog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is delete news",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analogs"
                ],
                "summary": "DELETE news",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "news id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/banner": {
            "get": {
                "description": "this api is get banner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banner"
                ],
                "summary": "Get banner",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Banner"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create new banner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banner"
                ],
                "summary": "Create new banner",
                "parameters": [
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Banner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/banner/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update banner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banner"
                ],
                "summary": "Update banner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "banner id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Banner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update banner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banner"
                ],
                "summary": "Update banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Banner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to delete banner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banner"
                ],
                "summary": "DELETE banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/brand": {
            "get": {
                "description": "this api is to get brands",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "Get brands",
                "parameters": [
                    {
                        "type": "string",
                        "name": "letter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Brand"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/brand/": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create new brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "Create new brand",
                "parameters": [
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "letter",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "seoDescription",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "seoTitle",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/brand/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to get brands",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "Get brands",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Brand"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/brand/letter": {
            "get": {
                "description": "this api is to get brands by letter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "Get brands by letter",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BrandsByLetter"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/brand/{id}": {
            "get": {
                "description": "this api is to get brands",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "Get brands",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Brand"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "Update brand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "letter",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "seoDescription",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "seoTitle",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to delete brands",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "DELETE brands",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/category": {
            "get": {
                "description": "this api is get category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get category",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "parentId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Category"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create new category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create new category",
                "parameters": [
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "parentId",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "seoDescription",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "seoTitle",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/category/addition": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to add category addition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Add category addition",
                "parameters": [
                    {
                        "description": "add products addition",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductAdditionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to delete category addition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "DELETE category addition",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "additionCategoryId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "productCategoryId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/category/addition/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to get category addition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get category additions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Products"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/category/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is get category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get category",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Category"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/category/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "parentId",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "seoDescription",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "seoTitle",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to delete category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "DELETE category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/contact": {
            "get": {
                "description": "this api is to get contacts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact"
                ],
                "summary": "Get contacts",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Contact"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/contact/": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create new contact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact"
                ],
                "summary": "Create new contact",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.ContactRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Contact"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/contact/main": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to get contacts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact"
                ],
                "summary": "Get contacts",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Contact"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/contact/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to get contacts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact"
                ],
                "summary": "Get contacts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Contact"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update contact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact"
                ],
                "summary": "Update contact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContactRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Contact"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to delete country",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact"
                ],
                "summary": "Delete country",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/country": {
            "get": {
                "description": "this api is to get countries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Get countries",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Country"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/country/": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create new country",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Create new country",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.CountryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Country"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/country/{id}": {
            "get": {
                "description": "this api is to get country",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Get country",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Country"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update country",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Update country",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Country"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to delete country",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Delete country",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/customer": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for Get me",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get customers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Customer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for Update customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Update customer",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for Create customer by the phone if already exists return existing customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Create customer",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomerRegisterByAdmin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/customer/check-code": {
            "post": {
                "description": "this api is for checking customer code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Check customer code",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CheckCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/customer/login": {
            "post": {
                "description": "this api is for login customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Login customer",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomerLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TokenResponse"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/customer/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for Get me",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/customer/password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for update customer password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Update customer password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/customer/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for register new customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Register a new customer",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomerRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/customer/send-code": {
            "post": {
                "description": "this api is for sending code to a customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Send code to customer",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomerCode"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/customer/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for Get by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "customer id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/news": {
            "get": {
                "description": "this api is get news",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Get news",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.News"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create news",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Create news",
                "parameters": [
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.News"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/news/{id}": {
            "get": {
                "description": "this api is Update news",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Update news",
                "parameters": [
                    {
                        "type": "string",
                        "description": "news id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.News"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update news",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Update news",
                "parameters": [
                    {
                        "type": "string",
                        "description": "news id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.News"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is delete news",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "DELETE news",
                "parameters": [
                    {
                        "type": "string",
                        "description": "news id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/order": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to get customer orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get customer orders",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CustomOrderResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create new order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create new order",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.OrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/order/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to get all orders from admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get all orders for admin",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "customerId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "dateFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "dateTo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Orders"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/order/applicant": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to get customer orders applicants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get customer orders applicants",
                "parameters": [
                    {
                        "type": "string",
                        "name": "fullName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "phone",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CustomOrderResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "post": {
                "description": "this api is create new order applicant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create new order applicant",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.OrderApplicantRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.OrderApplicant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/order/applicant/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to delete by id order applicant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "delete by id order applicant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/order/cancel/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for cancel order this api change status to 3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Cancel  order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Orders"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/order/finish/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is finish order this api change status to 2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Finish Order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Orders"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/order/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to get by id order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get by id order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Orders"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update order admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Update order by admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "name": "total",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.OrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create new order admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create new order by admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "customer id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.OrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is delete order this api change status to 2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Delete Order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Orders"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/parameter": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for get product parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parameter"
                ],
                "summary": "get product parameter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Parameters"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/parameter/": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create new parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parameter"
                ],
                "summary": "Create new parameter",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.ParametersRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Parameters"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/parameter/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to get Parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parameter"
                ],
                "summary": "Get Parameter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Parameters"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parameter"
                ],
                "summary": "Update parameter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Parameters"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to delete parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parameter"
                ],
                "summary": "Delete parameter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/product": {
            "get": {
                "description": "this api is get product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "get product",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "isNew",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "isTop",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "multiSearch",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "parentId",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "priceFrom",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "priceTo",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "description": "product brand ids",
                        "name": "brandId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "description": "product country ids",
                        "name": "countryId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ProductsList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create new product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create new product",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "brandId",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "countryId",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isNew",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isTop",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "parentId",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "name": "price",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "seoDescription",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "seoTitle",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Products"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/product/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is get product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "get product",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "isNew",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "isTop",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "multiSearch",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "parentId",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "priceFrom",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "priceTo",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "description": "product brand ids",
                        "name": "brandId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "description": "product country ids",
                        "name": "countryId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ProductsList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/product/list": {
            "post": {
                "description": "this api is get product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "get product",
                "parameters": [
                    {
                        "description": "product brand ids",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.ProductsIds"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ProductsList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/product/media/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is add media to product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Add product media",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Products"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is add media to product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Add product media",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "media id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Products"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/product/parameter/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api will create gotten parameters and delete other relations product parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create product parameters",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProductParamReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Products"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/product/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "brandId",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "countryId",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isNew",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isTop",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "parentId",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "name": "price",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "seoDescription",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "seoTitle",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Products"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for delete product from favorites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "delete product from favorites",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/public-offer": {
            "get": {
                "description": "this api is to get public offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PublicOffer"
                ],
                "summary": "Get public offer",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.PublicOffer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/public-offer/": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create new public",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PublicOffer"
                ],
                "summary": "Create new public offer",
                "parameters": [
                    {
                        "description": "data body",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.PublicOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.PublicOffer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to delete public offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PublicOffer"
                ],
                "summary": "Delete public offer",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/service": {
            "get": {
                "description": "this api is get service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Get service",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Service"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create new service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Create new service",
                "parameters": [
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/service/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Update service",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "service id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Update service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "position",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is to delete service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "DELETE service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/vacancy": {
            "get": {
                "description": "this api is get vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Get vacancy",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Vacancy"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Create vacancy",
                "parameters": [
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "region",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "requirementEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "requirementRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "requirementUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "responsibilityEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "responsibilityRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "responsibilityUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "typeEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "typeRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "typeUz",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Vacancy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/vacancy/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is get all vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Get all vacancy",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Vacancy"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/vacancy/applicant": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is get applicant of vacancy statuses(0--new , 1-accept,2-saved,3-rejected)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Create applicant to vacancy",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "vacancyId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Applicant"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "post": {
                "description": "this api is create applicant to vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Create applicant to vacancy",
                "parameters": [
                    {
                        "type": "string",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "phone",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "vacancyId",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "resume_file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/vacancy/applicant/accept/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for change status applicant to 1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Accept applicant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "applicant id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Applicant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/vacancy/applicant/reject/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is for change status applicant to 3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Reject applicant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "applicant id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Applicant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/vacancy/applicant/save/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is change applicant status to 2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Save applicant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "applicant id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Applicant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/vacancy/applicant/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create applicant to vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Create applicant to vacancy",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vacancy id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Applicant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is create applicant to vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Create applicant to vacancy",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vacancy id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        },
        "/api/vacancy/{id}": {
            "get": {
                "description": "this api is Update vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Update vacancy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vacancy id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Vacancy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is Update vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "Update vacancy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vacancy id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "descriptionEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "descriptionUz",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "nameUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "region",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "requirementEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "requirementRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "requirementUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "responsibilityEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "responsibilityRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "responsibilityUz",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "typeEn",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "typeRu",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "typeUz",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "image_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Vacancy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "this api is DELETE vacancy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancy"
                ],
                "summary": "DELETE vacancy",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "vacancy id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.About": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "descriptionEn": {
                    "type": "string"
                },
                "descriptionRu": {
                    "type": "string"
                },
                "descriptionUz": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.AdminAuth": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Admins": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isSuperuser": {
                    "type": "boolean"
                },
                "lastVisit": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.AdminsCreateRequest": {
            "type": "object",
            "properties": {
                "isActive": {
                    "type": "boolean"
                },
                "isSuperuser": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Analog": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.AnalogRequest": {
            "type": "object",
            "properties": {
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                }
            }
        },
        "models.AnalogResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Products"
                    }
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Applicant": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "resume": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "vacancy": {
                    "$ref": "#/definitions/models.Vacancy"
                },
                "vacancyId": {
                    "type": "integer"
                }
            }
        },
        "models.Banner": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "descriptionEn": {
                    "type": "string"
                },
                "descriptionRu": {
                    "type": "string"
                },
                "descriptionUz": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Brand": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "descriptionEn": {
                    "type": "string"
                },
                "descriptionRu": {
                    "type": "string"
                },
                "descriptionUz": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "letter": {
                    "type": "string"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "seoDescription": {
                    "type": "string"
                },
                "seoTitle": {
                    "type": "string"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.BrandsByLetter": {
            "type": "object",
            "properties": {
                "brands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Brand"
                    }
                },
                "letter": {
                    "type": "string"
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "deleted": {
                    "$ref": "#/definitions/models.Admins"
                },
                "deletedAt": {
                    "type": "string"
                },
                "descriptionEn": {
                    "type": "string"
                },
                "descriptionRu": {
                    "type": "string"
                },
                "descriptionUz": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "parent": {
                    "$ref": "#/definitions/models.Category"
                },
                "parentId": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                },
                "seoDescription": {
                    "type": "string"
                },
                "seoTitle": {
                    "type": "string"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.CheckCodeRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "997361"
                },
                "isRegistered": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string",
                    "example": "998995117361"
                }
            }
        },
        "models.Contact": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isMain": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "workingHours": {
                    "type": "string"
                }
            }
        },
        "models.ContactRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "isMain": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "workingHours": {
                    "type": "string"
                }
            }
        },
        "models.Country": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                }
            }
        },
        "models.CountryRequest": {
            "type": "object",
            "properties": {
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                }
            }
        },
        "models.CustomOrderResponse": {
            "type": "object",
            "properties": {
                "activeCount": {
                    "type": "integer"
                },
                "cancelledCount": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                },
                "finishedCount": {
                    "type": "integer"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Orders"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "models.Customer": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastVisit": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.CustomerCode": {
            "type": "object",
            "properties": {
                "phone": {
                    "type": "string",
                    "example": "998995117361"
                }
            }
        },
        "models.CustomerLogin": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "secret"
                },
                "phone": {
                    "type": "string",
                    "example": "998995117361"
                }
            }
        },
        "models.CustomerRegister": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "example": "secret"
                }
            }
        },
        "models.CustomerRegisterByAdmin": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.CustomerRequest": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.News": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "descriptionEn": {
                    "type": "string"
                },
                "descriptionRu": {
                    "type": "string"
                },
                "descriptionUz": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.OrderApplicant": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.OrderApplicantRequest": {
            "type": "object",
            "properties": {
                "fullName": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.OrderItems": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "item": {
                    "$ref": "#/definitions/models.Products"
                },
                "itemId": {
                    "type": "integer"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "models.OrderItemsRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "itemId": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.OrderRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrderItemsRequest"
                    }
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "models.OrderResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/models.Customer"
                },
                "customerId": {
                    "type": "integer"
                },
                "deleted": {
                    "$ref": "#/definitions/models.Admins"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrderItems"
                    }
                },
                "status": {
                    "type": "integer"
                },
                "total": {
                    "type": "number"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Orders": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/models.Customer"
                },
                "customerId": {
                    "type": "integer"
                },
                "deleted": {
                    "$ref": "#/definitions/models.Admins"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "total": {
                    "type": "number"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Parameters": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "models.ParametersRequest": {
            "type": "object",
            "properties": {
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "models.ProductAdditionRequest": {
            "type": "object",
            "properties": {
                "additionCategoryId": {
                    "type": "integer"
                },
                "productCategoryId": {
                    "type": "integer"
                }
            }
        },
        "models.ProductMedia": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "media": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "productId": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.ProductParamReq": {
            "type": "object",
            "properties": {
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductParametersRequest"
                    }
                }
            }
        },
        "models.ProductParameters": {
            "type": "object",
            "properties": {
                "parameter": {
                    "$ref": "#/definitions/models.Parameters"
                },
                "parameterId": {
                    "type": "integer"
                },
                "product": {
                    "$ref": "#/definitions/models.Products"
                },
                "productId": {
                    "type": "integer"
                },
                "valEn": {
                    "type": "string"
                },
                "valRu": {
                    "type": "string"
                },
                "valUz": {
                    "type": "string"
                }
            }
        },
        "models.ProductParametersRequest": {
            "type": "object",
            "properties": {
                "parameterId": {
                    "type": "integer"
                },
                "valEn": {
                    "type": "string"
                },
                "valRu": {
                    "type": "string"
                },
                "valUz": {
                    "type": "string"
                }
            }
        },
        "models.ProductResponse": {
            "type": "object",
            "properties": {
                "brand": {
                    "$ref": "#/definitions/models.Brand"
                },
                "brandId": {
                    "type": "integer"
                },
                "country": {
                    "$ref": "#/definitions/models.Country"
                },
                "countryId": {
                    "type": "integer"
                },
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "deleted": {
                    "$ref": "#/definitions/models.Admins"
                },
                "deletedAt": {
                    "type": "string"
                },
                "descriptionEn": {
                    "type": "string"
                },
                "descriptionRu": {
                    "type": "string"
                },
                "descriptionUz": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isNew": {
                    "type": "boolean"
                },
                "isTop": {
                    "type": "boolean"
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductMedia"
                    }
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductParameters"
                    }
                },
                "parent": {
                    "$ref": "#/definitions/models.Category"
                },
                "parentId": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "seoDescription": {
                    "type": "string"
                },
                "seoTitle": {
                    "type": "string"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Products": {
            "type": "object",
            "properties": {
                "brand": {
                    "$ref": "#/definitions/models.Brand"
                },
                "brandId": {
                    "type": "integer"
                },
                "country": {
                    "$ref": "#/definitions/models.Country"
                },
                "countryId": {
                    "type": "integer"
                },
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "deleted": {
                    "$ref": "#/definitions/models.Admins"
                },
                "deletedAt": {
                    "type": "string"
                },
                "descriptionEn": {
                    "type": "string"
                },
                "descriptionRu": {
                    "type": "string"
                },
                "descriptionUz": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isNew": {
                    "type": "boolean"
                },
                "isTop": {
                    "type": "boolean"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "parent": {
                    "$ref": "#/definitions/models.Category"
                },
                "parentId": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "seoDescription": {
                    "type": "string"
                },
                "seoTitle": {
                    "type": "string"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.ProductsIds": {
            "type": "object",
            "properties": {
                "productsIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.ProductsList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Products"
                    }
                }
            }
        },
        "models.PublicOffer": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "descriptionEn": {
                    "type": "string"
                },
                "descriptionRu": {
                    "type": "string"
                },
                "descriptionUz": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                }
            }
        },
        "models.PublicOfferRequest": {
            "type": "object",
            "properties": {
                "descriptionEn": {
                    "type": "string"
                },
                "descriptionRu": {
                    "type": "string"
                },
                "descriptionUz": {
                    "type": "string"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                }
            }
        },
        "models.Service": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "descriptionEn": {
                    "type": "string"
                },
                "descriptionRu": {
                    "type": "string"
                },
                "descriptionUz": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.TokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                }
            }
        },
        "models.Vacancy": {
            "type": "object",
            "properties": {
                "created": {
                    "$ref": "#/definitions/models.Admins"
                },
                "createdAt": {
                    "type": "string"
                },
                "descriptionEn": {
                    "type": "string"
                },
                "descriptionRu": {
                    "type": "string"
                },
                "descriptionUz": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "nameEn": {
                    "type": "string"
                },
                "nameRu": {
                    "type": "string"
                },
                "nameUz": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "requirementEn": {
                    "type": "string"
                },
                "requirementRu": {
                    "type": "string"
                },
                "requirementUz": {
                    "type": "string"
                },
                "responsibilityEn": {
                    "type": "string"
                },
                "responsibilityRu": {
                    "type": "string"
                },
                "responsibilityUz": {
                    "type": "string"
                },
                "typeEn": {
                    "type": "string"
                },
                "typeRu": {
                    "type": "string"
                },
                "typeUz": {
                    "type": "string"
                },
                "updated": {
                    "$ref": "#/definitions/models.Admins"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "AUTH.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Golang CRM Swagger Documentation",
	Description:      "This is a sample server CRM server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
